import random
import uuid
import hashlib
from datetime import datetime


from django.shortcuts import render

from django.core.exceptions import ObjectDoesNotExist

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from django.contrib.auth.models import User
# from users.models import User
from users.serializers import RequestLoginSerializer, RequestGetSerializer, UserSerializer, RequestSignUpSerializer

def user_list_view(request):
    users = User.objects.all()
    return render(
        request,
        "userlist7.html",
        {
            "users" : users
        }
    )


class SignUpView(APIView):
    def post(self,request):
        serializer = RequestSignUpSerializer(data=request.data)
        if serializer.is_valid():
            u=serializer.save()
            print(u)
            return Response(
                {
                    'Message' : 'Account Create',
                    'data'  : serializer.data
                }
            )

        return Response(
            serializer.errors,
            status=status.HTTP_400_BAD_REQUEST
        )


class LoginView(APIView):
    def post(self,request):
        serializer = RequestLoginSerializer(data=request.data)
        if serializer.is_valid():
            try:
                # u=User.objects.filter(username=serializer.data['username'])[0]
                u=User.objects.get(username=serializer.data['username'])

            except ObjectDoesNotExist:
                return Response(
                    {
                        'Message' : 'There is not any account with this Username',
                    }
                )
            hash_pass = hashlib.md5(serializer.data['password'].encode()).hexdigest()
            # if serializer.data['password'] == u.password :
            if hash_pass == u.password :
                random_token = uuid.uuid4()
                u.token = str(random_token)
                u.save()
                return Response(
                    {
                        'Message'   : 'Your Account Info is Correct',
                        'data' :
                        {
                            'first_name' : u.first_name,
                            'id' : u.id,
                            'token' : random_token
                        }
                    },
                    status=status.HTTP_200_OK
                )
            else:
                return Response(
                    {
                        'Message' : 'Your password is Wrong'
                    },
                    status=status.HTTP_404_NOT_FOUND
                )



        else:
            return Response(
             serializer.errors,
             status=status.HTTP_400_BAD_REQUEST
            )




class UserListItemView(APIView):

    def get(self,request):
        request_serializer = RequestGetSerializer(data=request.GET) #data=request.data

        if request_serializer.is_valid():
            users = User.objects
            if 'first_name' in request_serializer.data:
                users = users.filter(
                    first_name=request_serializer.data['first_name']
                )
            if 'last_name' in request_serializer.data:
                users = users.filter(
                    last_name=request_serializer.data['last_name']
                )
            serializer=UserSerializer(instance=users,many=True)
            return Response(
                {
                    "users" : serializer.data
                },
                status=status.HTTP_200_OK
            )

        else:
            return Response(
                request_serializer.errors,
                status=status.HTTP_400_BAD_REQUEST
            )

    def post(self,request):
        serializer = UserSerializer(data=request.POST)#data=request.data

        if serializer.is_valid():
            serializer.save()

        else:
            return Response(
                serializer.errors,
                status=status.HTTP_404_NOT_FOUND
            )

        return Response({
            "user" : serializer.data
            },
            status=status.HTTP_201_CREATED
        )
